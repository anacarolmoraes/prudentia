# prudentIA - Variáveis de Ambiente (Exemplo)
# Copie este arquivo para .env e preencha com suas configurações.
# NUNCA adicione o arquivo .env ao controle de versão (Git).

# =========================================
# CONFIGURAÇÕES GERAIS DO DJANGO
# =========================================
# ATENÇÃO: Gere uma nova SECRET_KEY para produção!
# Você pode gerar uma usando: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=sua_chave_secreta_super_longa_e_aleatoria_aqui
DEBUG=True # Mude para False em produção!
ALLOWED_HOSTS=127.0.0.1,localhost # Adicione seus domínios de produção aqui, separados por vírgula

# =========================================
# BANCO DE DADOS (PostgreSQL)
# =========================================
# Opção 1: Usar DATABASE_URL (recomendado se sua hospedagem suportar)
# DATABASE_URL=postgres://USER:PASSWORD@HOST:PORT/NAME
# Exemplo: DATABASE_URL=postgres://prudentia_user:prudentia_pass@localhost:5432/prudentia_db

# Opção 2: Variáveis individuais
DB_ENGINE=django.db.backends.postgresql
DB_NAME=prudentia_db
DB_USER=prudentia_user
DB_PASSWORD=prudentia_pass
DB_HOST=localhost # Ou o host do seu servidor de banco de dados
DB_PORT=5432

# =========================================
# REDIS (Cache e Celery Broker/Backend)
# =========================================
REDIS_URL=redis://localhost:6379/0 # /0 para cache, /1 para Celery, etc.
# Se o Redis tiver senha: redis://:PASSWORD@HOST:PORT/DB_NUMBER

# =========================================
# CELERY (se não usar Redis URL para broker/backend)
# =========================================
# CELERY_BROKER_URL=amqp://guest:guest@localhost:5672// # Exemplo para RabbitMQ
# CELERY_RESULT_BACKEND=db+postgresql://USER:PASSWORD@HOST:PORT/NAME # Exemplo para backend em DB

# =========================================
# CONFIGURAÇÕES DE EMAIL (SMTP)
# =========================================
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.example.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=seu_email@example.com
EMAIL_HOST_PASSWORD=sua_senha_de_email
DEFAULT_FROM_EMAIL="prudentIA <noreply@prudentia.com.br>"
SERVER_EMAIL="prudentIA Erros <errors@prudentia.com.br>" # Para emails de erro do Django

# =========================================
# GOOGLE APIs (Drive, Forms)
# =========================================
# Caminho para o arquivo JSON de credenciais do Google Cloud (para OAuth2 Client ID)
GOOGLE_CLIENT_SECRET_FILE=./config/client_secret.json
# Caminho para o arquivo JSON de credenciais da Conta de Serviço do Google (se usar)
GOOGLE_SERVICE_ACCOUNT_FILE=./config/service_account.json
# Diretório para armazenar tokens de usuário OAuth2
GOOGLE_TOKEN_STORAGE_DIR=./config/tokens

# =========================================
# PJE SCRAPER
# =========================================
# PJE_MONITOR_PROXY_URL=http://user:pass@proxy.example.com:port # Proxy para o scraper (opcional)

# =========================================
# SERVIÇO DE ASSINATURA DIGITAL
# =========================================
# Se o serviço de assinatura for um microserviço separado ou externo:
SIGNATURE_SERVICE_URL=http://localhost:8001/api/v1/signatures # Exemplo
SIGNATURE_SERVICE_API_KEY=sua_api_key_para_servico_de_assinatura
# Configurações para a Blockchain (se aplicável e gerenciado aqui)
BLOCKCHAIN_API_URL=http://localhost:8545 # Exemplo para nó Ethereum
BLOCKCHAIN_CONTRACT_ADDRESS=0xSeuContratoDeAssinaturaAqui
BLOCKCHAIN_PRIVATE_KEY=0xSuaChavePrivadaParaAssinarTransacoesBlockchain

# =========================================
# PROCESSAMENTO DE DOCUMENTOS (OCR)
# =========================================
# Caminho para o executável do Tesseract OCR
TESSERACT_PATH=/usr/bin/tesseract # Linux
# TESSERACT_PATH="C:\Program Files\Tesseract-OCR\tesseract.exe" # Windows
# TESSERACT_PATH=/opt/homebrew/bin/tesseract # macOS (Homebrew)
TESSERACT_LANG=por # Idioma padrão para OCR

# =========================================
# WHATSAPP API (para notificações)
# =========================================
WHATSAPP_API_URL=https://graph.facebook.com/v17.0/YOUR_PHONE_NUMBER_ID/messages # Exemplo para API Oficial do WhatsApp Business
WHATSAPP_API_TOKEN=SEU_TOKEN_DE_ACESSO_PERMANENTE_AQUI
WHATSAPP_SENDER_PHONE_NUMBER_ID=SEU_ID_DE_NUMERO_DE_TELEFONE_AQUI # ID do número de telefone remetente

# =========================================
# OUTRAS CHAVES API E CONFIGURAÇÕES
# =========================================
# Exemplo para um gateway de pagamento
PAYMENT_GATEWAY_API_KEY=sua_api_key_do_gateway_de_pagamento
PAYMENT_GATEWAY_URL=https://api.gateway.com/v1

# =========================================
# CONFIGURAÇÕES DE AMBIENTE
# =========================================
# Define o ambiente atual (development, staging, production)
ENVIRONMENT=development

# =========================================
# CONFIGURAÇÕES DE ARQUIVOS ESTÁTICOS E MÍDIA (Django)
# =========================================
# Em desenvolvimento, Django serve arquivos estáticos. Em produção, use Nginx ou similar.
# STATIC_URL=/static/
# STATIC_ROOT= # Diretório para collectstatic em produção
# MEDIA_URL=/media/
# MEDIA_ROOT=./media/ # Diretório para uploads de usuários

# =========================================
# CORS (Cross-Origin Resource Sharing)
# =========================================
# CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000 # Frontend URLs
# CORS_ALLOW_ALL_ORIGINS=False # Mude para True apenas em desenvolvimento, se necessário

# =========================================
# DOMÍNIO DO SITE (para links em emails, etc.)
# =========================================
SITE_DOMAIN=localhost:8000 # Mude para seu domínio de produção

# =========================================
# CONFIGURAÇÕES DO FRONTEND (se servido pelo Django ou para variáveis no contexto)
# =========================================
# FRONTEND_URL=http://localhost:3000 # Se o frontend for uma SPA separada

# =========================================
# OUTRAS CONFIGURAÇÕES ESPECÍFICAS DO prudentIA
# =========================================
# Intervalo padrão de monitoramento do PJe em horas
PJE_MONITORING_DEFAULT_INTERVAL_HOURS=24
# Dias retroativos para a primeira busca de publicações do PJe
PJE_MONITORING_INITIAL_LOOKBACK_DAYS=7
# URL base para formulários personalizados (se hospedados separadamente)
CUSTOM_FORM_BASE_URL=https://forms.prudentia.com.br
